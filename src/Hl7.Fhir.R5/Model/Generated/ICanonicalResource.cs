// <auto-generated/>
// Contents of: hl7.fhir.r5.expansions@5.0.0, hl7.fhir.r5.core@5.0.0

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using Hl7.Fhir.Introspection;
using Hl7.Fhir.Serialization;
using Hl7.Fhir.Specification;
using Hl7.Fhir.Utility;
using Hl7.Fhir.Validation;
using SystemPrimitive = Hl7.Fhir.ElementModel.Types;

/*
  Copyright (c) 2011+, HL7, Inc.
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:
  
   * Redistributions of source code must retain the above copyright notice, this 
     list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above copyright notice, 
     this list of conditions and the following disclaimer in the documentation 
     and/or other materials provided with the distribution.
   * Neither the name of HL7 nor the names of its contributors may be used to 
     endorse or promote products derived from this software without specific 
     prior written permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
  POSSIBILITY OF SUCH DAMAGE.
  
*/

namespace Hl7.Fhir.Model
{
  /// <summary>
  /// Common Interface declaration for definitional resources
  /// </summary>
  public interface ICanonicalResource
  {
    /// <summary>
    /// Canonical identifier for this CanonicalResource, represented as an absolute URI (globally unique)
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    string Url { get; set; }

    /// <summary>
    /// Canonical identifier for this CanonicalResource, represented as an absolute URI (globally unique)
    /// </summary>
    Hl7.Fhir.Model.FhirUri UrlElement { get; set; }

    /// <summary>
    /// Additional identifier for the CanonicalResource
    /// </summary>
    List<Hl7.Fhir.Model.Identifier> Identifier { get; set; }

    /// <summary>
    /// Business version of the CanonicalResource
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    string Version { get; set; }

    /// <summary>
    /// Business version of the CanonicalResource
    /// </summary>
    Hl7.Fhir.Model.FhirString VersionElement { get; set; }

    /// <summary>
    /// How to compare versions
    /// </summary>
    Hl7.Fhir.Model.DataType VersionAlgorithm { get; set; }

    /// <summary>
    /// Name for this CanonicalResource (computer friendly)
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    string Name { get; set; }

    /// <summary>
    /// Name for this CanonicalResource (computer friendly)
    /// </summary>
    Hl7.Fhir.Model.FhirString NameElement { get; set; }

    /// <summary>
    /// Name for this CanonicalResource (human friendly)
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    string Title { get; set; }

    /// <summary>
    /// Name for this CanonicalResource (human friendly)
    /// </summary>
    Hl7.Fhir.Model.FhirString TitleElement { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    Hl7.Fhir.Model.PublicationStatus? Status { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    Code<Hl7.Fhir.Model.PublicationStatus> StatusElement { get; set; }

    /// <summary>
    /// For testing purposes, not real usage
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    bool? Experimental { get; set; }

    /// <summary>
    /// For testing purposes, not real usage
    /// </summary>
    Hl7.Fhir.Model.FhirBoolean ExperimentalElement { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    string Date { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    Hl7.Fhir.Model.FhirDateTime DateElement { get; set; }

    /// <summary>
    /// Name of the publisher/steward (organization or individual)
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    string Publisher { get; set; }

    /// <summary>
    /// Name of the publisher/steward (organization or individual)
    /// </summary>
    Hl7.Fhir.Model.FhirString PublisherElement { get; set; }

    /// <summary>
    /// Contact details for the publisher
    /// </summary>
    List<Hl7.Fhir.Model.ContactDetail> Contact { get; set; }

    /// <summary>
    /// Natural language description of the CanonicalResource
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    string Description { get; set; }

    /// <summary>
    /// Natural language description of the CanonicalResource
    /// </summary>
    Hl7.Fhir.Model.Markdown DescriptionElement { get; set; }

    /// <summary>
    /// The context that the content is intended to support
    /// </summary>
    List<Hl7.Fhir.Model.UsageContext> UseContext { get; set; }

    /// <summary>
    /// Intended jurisdiction for CanonicalResource (if applicable)
    /// </summary>
    List<Hl7.Fhir.Model.CodeableConcept> Jurisdiction { get; set; }

    /// <summary>
    /// Why this CanonicalResource is defined
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    string Purpose { get; set; }

    /// <summary>
    /// Why this CanonicalResource is defined
    /// </summary>
    Hl7.Fhir.Model.Markdown PurposeElement { get; set; }

    /// <summary>
    /// Use and/or publishing restrictions
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    string Copyright { get; set; }

    /// <summary>
    /// Use and/or publishing restrictions
    /// </summary>
    Hl7.Fhir.Model.Markdown CopyrightElement { get; set; }

    /// <summary>
    /// Copyright holder and year(s)
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    string CopyrightLabel { get; set; }

    /// <summary>
    /// Copyright holder and year(s)
    /// </summary>
    Hl7.Fhir.Model.FhirString CopyrightLabelElement { get; set; }

  }

  public partial class ActivityDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class ActorDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class ChargeItemDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class Citation : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class CompartmentDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier
    {
      get { return null; }
      set { throw new NotImplementedException("Resource CompartmentDefinition does not implement ICanonicalResource.identifier");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction
    {
      get { return null; }
      set { throw new NotImplementedException("Resource CompartmentDefinition does not implement ICanonicalResource.jurisdiction");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource CompartmentDefinition does not implement ICanonicalResource.copyright");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright
    {
      get { return null; }
      set { throw new NotImplementedException("Resource CompartmentDefinition does not implement ICanonicalResource.copyright");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource CompartmentDefinition does not implement ICanonicalResource.copyrightLabel");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel
    {
      get { return null; }
      set { throw new NotImplementedException("Resource CompartmentDefinition does not implement ICanonicalResource.copyrightLabel");}
    }

  }

  public partial class ConceptMap : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class ConditionDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource ConditionDefinition does not implement ICanonicalResource.purpose");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose
    {
      get { return null; }
      set { throw new NotImplementedException("Resource ConditionDefinition does not implement ICanonicalResource.purpose");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource ConditionDefinition does not implement ICanonicalResource.copyright");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright
    {
      get { return null; }
      set { throw new NotImplementedException("Resource ConditionDefinition does not implement ICanonicalResource.copyright");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource ConditionDefinition does not implement ICanonicalResource.copyrightLabel");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel
    {
      get { return null; }
      set { throw new NotImplementedException("Resource ConditionDefinition does not implement ICanonicalResource.copyrightLabel");}
    }

  }

  public partial class EventDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class Evidence : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction
    {
      get { return null; }
      set { throw new NotImplementedException("Resource Evidence does not implement ICanonicalResource.jurisdiction");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class EvidenceReport : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.version");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Version
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.version");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.versionAlgorithm");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.name");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Name
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.name");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.title");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Title
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.title");}
    }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.experimental");}
    }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.experimental");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.date");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Date
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.date");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.description");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Description
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.description");}
    }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.jurisdiction");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.purpose");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.purpose");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.copyright");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.copyright");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.copyrightLabel");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceReport does not implement ICanonicalResource.copyrightLabel");}
    }

  }

  public partial class EvidenceVariable : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction
    {
      get { return null; }
      set { throw new NotImplementedException("Resource EvidenceVariable does not implement ICanonicalResource.jurisdiction");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class ExampleScenario : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class GraphDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class ImplementationGuide : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class Library : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class Measure : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class MedicationKnowledge : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.url");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Url
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.url");}
    }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.version");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Version
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.version");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.versionAlgorithm");}
    }

    /// <remarks>
    /// MedicationKnowledge.NameElement (ListTypeReference { Name = List, PropertyTypeString = List&lt;Hl7.Fhir.Model.FhirString&gt;, Element = PrimitiveTypeReference { Name = string, PropertyTypeString = Hl7.Fhir.Model.FhirString, PocoTypeName = FhirString, ConveniencePropertyType = System.String, ConveniencePropertyTypeString = string } }) is incompatible with
    /// ICanonicalResource.name (PrimitiveTypeReference { Name = string, PropertyTypeString = Hl7.Fhir.Model.FhirString, PocoTypeName = FhirString, ConveniencePropertyType = System.String, ConveniencePropertyTypeString = string })
    /// </remarks>
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement
    {
      get { return null; }
      set { throw new NotImplementedException("MedicationKnowledge.NameElement (ListTypeReference { Name = List, PropertyTypeString = List<Hl7.Fhir.Model.FhirString>, Element = PrimitiveTypeReference { Name = string, PropertyTypeString = Hl7.Fhir.Model.FhirString, PocoTypeName = FhirString, ConveniencePropertyType = System.String, ConveniencePropertyTypeString = string } }) is incompatible with ICanonicalResource.name (PrimitiveTypeReference { Name = string, PropertyTypeString = Hl7.Fhir.Model.FhirString, PocoTypeName = FhirString, ConveniencePropertyType = System.String, ConveniencePropertyTypeString = string })");}
    }

    // MedicationKnowledge.NameElement () is incompatible with ICanonicalResource.name (string)
    [IgnoreDataMember]
     string ICanonicalResource.Name
    {
      get { return null; }
      set { throw new NotImplementedException("MedicationKnowledge.NameElement (List<Hl7.Fhir.Model.FhirString>) is incompatible with ICanonicalResource.name (Hl7.Fhir.Model.FhirString)");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.title");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Title
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.title");}
    }

    /// <remarks>
    /// MedicationKnowledge.StatusElement (CodedTypeReference { Name = code, PropertyTypeString = Code&lt;Hl7.Fhir.Model.MedicationKnowledge.MedicationKnowledgeStatusCodes&gt;, PocoTypeName = MedicationKnowledgeStatusCodes, ConveniencePropertyType = System.Enum, ConveniencePropertyTypeString = Hl7.Fhir.Model.MedicationKnowledge.MedicationKnowledgeStatusCodes?, EnumName = MedicationKnowledgeStatusCodes, EnumClassName = MedicationKnowledge }) is incompatible with
    /// ICanonicalResource.status (CodedTypeReference { Name = code, PropertyTypeString = Code&lt;Hl7.Fhir.Model.PublicationStatus&gt;, PocoTypeName = PublicationStatus, ConveniencePropertyType = System.Enum, ConveniencePropertyTypeString = Hl7.Fhir.Model.PublicationStatus?, EnumName = PublicationStatus, EnumClassName =  })
    /// </remarks>
    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement
    {
      get { return null; }
      set { throw new NotImplementedException("MedicationKnowledge.StatusElement (CodedTypeReference { Name = code, PropertyTypeString = Code<Hl7.Fhir.Model.MedicationKnowledge.MedicationKnowledgeStatusCodes>, PocoTypeName = MedicationKnowledgeStatusCodes, ConveniencePropertyType = System.Enum, ConveniencePropertyTypeString = Hl7.Fhir.Model.MedicationKnowledge.MedicationKnowledgeStatusCodes?, EnumName = MedicationKnowledgeStatusCodes, EnumClassName = MedicationKnowledge }) is incompatible with ICanonicalResource.status (CodedTypeReference { Name = code, PropertyTypeString = Code<Hl7.Fhir.Model.PublicationStatus>, PocoTypeName = PublicationStatus, ConveniencePropertyType = System.Enum, ConveniencePropertyTypeString = Hl7.Fhir.Model.PublicationStatus?, EnumName = PublicationStatus, EnumClassName =  })");}
    }

    // MedicationKnowledge.StatusElement (Hl7.Fhir.Model.MedicationKnowledge.MedicationKnowledgeStatusCodes?) is incompatible with ICanonicalResource.status (Hl7.Fhir.Model.PublicationStatus?)
    [IgnoreDataMember]
     Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status
    {
      get { return null; }
      set { throw new NotImplementedException("MedicationKnowledge.StatusElement (Code<Hl7.Fhir.Model.MedicationKnowledge.MedicationKnowledgeStatusCodes>) is incompatible with ICanonicalResource.status (Code<Hl7.Fhir.Model.PublicationStatus>)");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.experimental");}
    }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.experimental");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.date");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Date
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.date");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.publisher");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.publisher");}
    }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.contact");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.description");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Description
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.description");}
    }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.useContext");}
    }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.jurisdiction");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.purpose");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.purpose");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.copyright");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.copyright");}
    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.copyrightLabel");}
    }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel
    {
      get { return null; }
      set { throw new NotImplementedException("Resource MedicationKnowledge does not implement ICanonicalResource.copyrightLabel");}
    }

  }

  public partial class MessageDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class NamingSystem : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class ObservationDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier
    {
      get
      {
        if (Identifier == null) return new List<Hl7.Fhir.Model.Identifier>();
        return new List<Hl7.Fhir.Model.Identifier>() { Identifier };
      }

      set
      {
        if (value.Count == 0) { Identifier = null; }
        else if (value.Count == 1) { Identifier = value.First(); }
        else { throw new NotImplementedException("Resource ObservationDefinition can only have a single ICanonicalResource.Identifier value"); }
      }

    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class OperationDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class PlanDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class Questionnaire : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class Requirements : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class SearchParameter : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class SpecimenDefinition : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier
    {
      get
      {
        if (Identifier == null) return new List<Hl7.Fhir.Model.Identifier>();
        return new List<Hl7.Fhir.Model.Identifier>() { Identifier };
      }

      set
      {
        if (value.Count == 0) { Identifier = null; }
        else if (value.Count == 1) { Identifier = value.First(); }
        else { throw new NotImplementedException("Resource SpecimenDefinition can only have a single ICanonicalResource.Identifier value"); }
      }

    }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class StructureMap : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class SubscriptionTopic : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class TerminologyCapabilities : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class TestPlan : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

  public partial class TestScript : ICanonicalResource
  {
    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirUri ICanonicalResource.UrlElement { get => UrlElement; set { UrlElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Url { get => Url; set { Url =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.Identifier> ICanonicalResource.Identifier { get => Identifier; set { Identifier =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.VersionElement { get => VersionElement; set { VersionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Version { get => Version; set { Version =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.DataType ICanonicalResource.VersionAlgorithm { get => VersionAlgorithm; set { VersionAlgorithm =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.NameElement { get => NameElement; set { NameElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Name { get => Name; set { Name =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.TitleElement { get => TitleElement; set { TitleElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Title { get => Title; set { Title =  value; } }

    [IgnoreDataMember]
    Code<Hl7.Fhir.Model.PublicationStatus> ICanonicalResource.StatusElement { get => StatusElement; set { StatusElement =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.PublicationStatus? ICanonicalResource.Status { get => Status; set { Status =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirBoolean ICanonicalResource.ExperimentalElement { get => ExperimentalElement; set { ExperimentalElement =  value; } }

    [IgnoreDataMember]
    bool? ICanonicalResource.Experimental { get => Experimental; set { Experimental =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirDateTime ICanonicalResource.DateElement { get => DateElement; set { DateElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Date { get => Date; set { Date =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.PublisherElement { get => PublisherElement; set { PublisherElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Publisher { get => Publisher; set { Publisher =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.ContactDetail> ICanonicalResource.Contact { get => Contact; set { Contact =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.DescriptionElement { get => DescriptionElement; set { DescriptionElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Description { get => Description; set { Description =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.UsageContext> ICanonicalResource.UseContext { get => UseContext; set { UseContext =  value; } }

    [IgnoreDataMember]
    List<Hl7.Fhir.Model.CodeableConcept> ICanonicalResource.Jurisdiction { get => Jurisdiction; set { Jurisdiction =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.PurposeElement { get => PurposeElement; set { PurposeElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Purpose { get => Purpose; set { Purpose =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.Markdown ICanonicalResource.CopyrightElement { get => CopyrightElement; set { CopyrightElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.Copyright { get => Copyright; set { Copyright =  value; } }

    [IgnoreDataMember]
    Hl7.Fhir.Model.FhirString ICanonicalResource.CopyrightLabelElement { get => CopyrightLabelElement; set { CopyrightLabelElement =  value; } }

    [IgnoreDataMember]
    string ICanonicalResource.CopyrightLabel { get => CopyrightLabel; set { CopyrightLabel =  value; } }

  }

}

// end of file
