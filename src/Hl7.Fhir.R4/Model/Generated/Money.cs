// <auto-generated/>
// Contents of: hl7.fhir.r4.expansions@4.0.1, hl7.fhir.r4.core@4.0.1

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using Hl7.Fhir.Introspection;
using Hl7.Fhir.Serialization;
using Hl7.Fhir.Specification;
using Hl7.Fhir.Utility;
using Hl7.Fhir.Validation;
using SystemPrimitive = Hl7.Fhir.ElementModel.Types;

/*
  Copyright (c) 2011+, HL7, Inc.
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:
  
   * Redistributions of source code must retain the above copyright notice, this 
     list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above copyright notice, 
     this list of conditions and the following disclaimer in the documentation 
     and/or other materials provided with the distribution.
   * Neither the name of HL7 nor the names of its contributors may be used to 
     endorse or promote products derived from this software without specific 
     prior written permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
  POSSIBILITY OF SUCH DAMAGE.
  
*/

namespace Hl7.Fhir.Model
{
  /// <summary>
  /// An amount of economic utility in some recognized currency
  /// </summary>
  [Serializable]
  [DataContract]
  [FhirType("Money","http://hl7.org/fhir/StructureDefinition/Money")]
  public partial class Money : Hl7.Fhir.Model.DataType
  {
    /// <summary>
    /// FHIR Type Name
    /// </summary>
    public override string TypeName { get { return "Money"; } }

    /// <summary>
    /// Currency codes from ISO 4217 (see https://www.iso.org/iso-4217-currency-codes.html)
    /// (url: http://hl7.org/fhir/ValueSet/currencies)
    /// (system: urn:iso:std:iso:4217)
    /// </summary>
    [FhirEnumeration("Currencies", "http://hl7.org/fhir/ValueSet/currencies", "urn:iso:std:iso:4217")]
    public enum Currencies
    {
      /// <summary>
      /// United Arab Emirates dirham
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("AED"), Description("United Arab Emirates dirham")]
      AED,
      /// <summary>
      /// Afghan afghani
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("AFN"), Description("Afghan afghani")]
      AFN,
      /// <summary>
      /// Albanian lek
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("ALL"), Description("Albanian lek")]
      ALL,
      /// <summary>
      /// Armenian dram
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("AMD"), Description("Armenian dram")]
      AMD,
      /// <summary>
      /// Netherlands Antillean guilder
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("ANG"), Description("Netherlands Antillean guilder")]
      ANG,
      /// <summary>
      /// Angolan kwanza
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("AOA"), Description("Angolan kwanza")]
      AOA,
      /// <summary>
      /// Argentine peso
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("ARS"), Description("Argentine peso")]
      ARS,
      /// <summary>
      /// Australian dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("AUD"), Description("Australian dollar")]
      AUD,
      /// <summary>
      /// Aruban florin
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("AWG"), Description("Aruban florin")]
      AWG,
      /// <summary>
      /// Azerbaijani manat
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("AZN"), Description("Azerbaijani manat")]
      AZN,
      /// <summary>
      /// Bosnia and Herzegovina convertible mark
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BAM"), Description("Bosnia and Herzegovina convertible mark")]
      BAM,
      /// <summary>
      /// Barbados dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BBD"), Description("Barbados dollar")]
      BBD,
      /// <summary>
      /// Bangladeshi taka
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BDT"), Description("Bangladeshi taka")]
      BDT,
      /// <summary>
      /// Bulgarian lev
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BGN"), Description("Bulgarian lev")]
      BGN,
      /// <summary>
      /// Bahraini dinar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BHD"), Description("Bahraini dinar")]
      BHD,
      /// <summary>
      /// Burundian franc
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BIF"), Description("Burundian franc")]
      BIF,
      /// <summary>
      /// Bermudian dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BMD"), Description("Bermudian dollar")]
      BMD,
      /// <summary>
      /// Brunei dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BND"), Description("Brunei dollar")]
      BND,
      /// <summary>
      /// Boliviano
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BOB"), Description("Boliviano")]
      BOB,
      /// <summary>
      /// Bolivian Mvdol (funds code)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BOV"), Description("Bolivian Mvdol (funds code)")]
      BOV,
      /// <summary>
      /// Brazilian real
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BRL"), Description("Brazilian real")]
      BRL,
      /// <summary>
      /// Bahamian dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BSD"), Description("Bahamian dollar")]
      BSD,
      /// <summary>
      /// Bhutanese ngultrum
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BTN"), Description("Bhutanese ngultrum")]
      BTN,
      /// <summary>
      /// Botswana pula
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BWP"), Description("Botswana pula")]
      BWP,
      /// <summary>
      /// Belarusian ruble
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BYN"), Description("Belarusian ruble")]
      BYN,
      /// <summary>
      /// Belize dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("BZD"), Description("Belize dollar")]
      BZD,
      /// <summary>
      /// Canadian dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CAD"), Description("Canadian dollar")]
      CAD,
      /// <summary>
      /// Congolese franc
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CDF"), Description("Congolese franc")]
      CDF,
      /// <summary>
      /// WIR Euro (complementary currency)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CHE"), Description("WIR Euro (complementary currency)")]
      CHE,
      /// <summary>
      /// Swiss franc
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CHF"), Description("Swiss franc")]
      CHF,
      /// <summary>
      /// WIR Franc (complementary currency)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CHW"), Description("WIR Franc (complementary currency)")]
      CHW,
      /// <summary>
      /// Unidad de Fomento (funds code)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CLF"), Description("Unidad de Fomento (funds code)")]
      CLF,
      /// <summary>
      /// Chilean peso
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CLP"), Description("Chilean peso")]
      CLP,
      /// <summary>
      /// Renminbi (Chinese) yuan[8]
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CNY"), Description("Renminbi (Chinese) yuan[8]")]
      CNY,
      /// <summary>
      /// Colombian peso
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("COP"), Description("Colombian peso")]
      COP,
      /// <summary>
      /// Unidad de Valor Real (UVR) (funds code)[9]
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("COU"), Description("Unidad de Valor Real (UVR) (funds code)[9]")]
      COU,
      /// <summary>
      /// Costa Rican colon
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CRC"), Description("Costa Rican colon")]
      CRC,
      /// <summary>
      /// Cuban convertible peso
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CUC"), Description("Cuban convertible peso")]
      CUC,
      /// <summary>
      /// Cuban peso
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CUP"), Description("Cuban peso")]
      CUP,
      /// <summary>
      /// Cape Verde escudo
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CVE"), Description("Cape Verde escudo")]
      CVE,
      /// <summary>
      /// Czech koruna
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("CZK"), Description("Czech koruna")]
      CZK,
      /// <summary>
      /// Djiboutian franc
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("DJF"), Description("Djiboutian franc")]
      DJF,
      /// <summary>
      /// Danish krone
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("DKK"), Description("Danish krone")]
      DKK,
      /// <summary>
      /// Dominican peso
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("DOP"), Description("Dominican peso")]
      DOP,
      /// <summary>
      /// Algerian dinar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("DZD"), Description("Algerian dinar")]
      DZD,
      /// <summary>
      /// Egyptian pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("EGP"), Description("Egyptian pound")]
      EGP,
      /// <summary>
      /// Eritrean nakfa
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("ERN"), Description("Eritrean nakfa")]
      ERN,
      /// <summary>
      /// Ethiopian birr
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("ETB"), Description("Ethiopian birr")]
      ETB,
      /// <summary>
      /// Euro
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("EUR"), Description("Euro")]
      EUR,
      /// <summary>
      /// Fiji dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("FJD"), Description("Fiji dollar")]
      FJD,
      /// <summary>
      /// Falkland Islands pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("FKP"), Description("Falkland Islands pound")]
      FKP,
      /// <summary>
      /// Pound sterling
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("GBP"), Description("Pound sterling")]
      GBP,
      /// <summary>
      /// Georgian lari
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("GEL"), Description("Georgian lari")]
      GEL,
      /// <summary>
      /// Guernsey Pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("GGP"), Description("Guernsey Pound")]
      GGP,
      /// <summary>
      /// Ghanaian cedi
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("GHS"), Description("Ghanaian cedi")]
      GHS,
      /// <summary>
      /// Gibraltar pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("GIP"), Description("Gibraltar pound")]
      GIP,
      /// <summary>
      /// Gambian dalasi
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("GMD"), Description("Gambian dalasi")]
      GMD,
      /// <summary>
      /// Guinean franc
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("GNF"), Description("Guinean franc")]
      GNF,
      /// <summary>
      /// Guatemalan quetzal
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("GTQ"), Description("Guatemalan quetzal")]
      GTQ,
      /// <summary>
      /// Guyanese dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("GYD"), Description("Guyanese dollar")]
      GYD,
      /// <summary>
      /// Hong Kong dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("HKD"), Description("Hong Kong dollar")]
      HKD,
      /// <summary>
      /// Honduran lempira
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("HNL"), Description("Honduran lempira")]
      HNL,
      /// <summary>
      /// Croatian kuna
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("HRK"), Description("Croatian kuna")]
      HRK,
      /// <summary>
      /// Haitian gourde
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("HTG"), Description("Haitian gourde")]
      HTG,
      /// <summary>
      /// Hungarian forint
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("HUF"), Description("Hungarian forint")]
      HUF,
      /// <summary>
      /// Indonesian rupiah
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("IDR"), Description("Indonesian rupiah")]
      IDR,
      /// <summary>
      /// Israeli new shekel
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("ILS"), Description("Israeli new shekel")]
      ILS,
      /// <summary>
      /// Isle of Man Pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("IMP"), Description("Isle of Man Pound")]
      IMP,
      /// <summary>
      /// Indian rupee
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("INR"), Description("Indian rupee")]
      INR,
      /// <summary>
      /// Iraqi dinar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("IQD"), Description("Iraqi dinar")]
      IQD,
      /// <summary>
      /// Iranian rial
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("IRR"), Description("Iranian rial")]
      IRR,
      /// <summary>
      /// Icelandic króna
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("ISK"), Description("Icelandic króna")]
      ISK,
      /// <summary>
      /// Jersey Pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("JEP"), Description("Jersey Pound")]
      JEP,
      /// <summary>
      /// Jamaican dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("JMD"), Description("Jamaican dollar")]
      JMD,
      /// <summary>
      /// Jordanian dinar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("JOD"), Description("Jordanian dinar")]
      JOD,
      /// <summary>
      /// Japanese yen
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("JPY"), Description("Japanese yen")]
      JPY,
      /// <summary>
      /// Kenyan shilling
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("KES"), Description("Kenyan shilling")]
      KES,
      /// <summary>
      /// Kyrgyzstani som
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("KGS"), Description("Kyrgyzstani som")]
      KGS,
      /// <summary>
      /// Cambodian riel
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("KHR"), Description("Cambodian riel")]
      KHR,
      /// <summary>
      /// Comoro franc
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("KMF"), Description("Comoro franc")]
      KMF,
      /// <summary>
      /// North Korean won
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("KPW"), Description("North Korean won")]
      KPW,
      /// <summary>
      /// South Korean won
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("KRW"), Description("South Korean won")]
      KRW,
      /// <summary>
      /// Kuwaiti dinar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("KWD"), Description("Kuwaiti dinar")]
      KWD,
      /// <summary>
      /// Cayman Islands dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("KYD"), Description("Cayman Islands dollar")]
      KYD,
      /// <summary>
      /// Kazakhstani tenge
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("KZT"), Description("Kazakhstani tenge")]
      KZT,
      /// <summary>
      /// Lao kip
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("LAK"), Description("Lao kip")]
      LAK,
      /// <summary>
      /// Lebanese pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("LBP"), Description("Lebanese pound")]
      LBP,
      /// <summary>
      /// Sri Lankan rupee
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("LKR"), Description("Sri Lankan rupee")]
      LKR,
      /// <summary>
      /// Liberian dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("LRD"), Description("Liberian dollar")]
      LRD,
      /// <summary>
      /// Lesotho loti
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("LSL"), Description("Lesotho loti")]
      LSL,
      /// <summary>
      /// Libyan dinar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("LYD"), Description("Libyan dinar")]
      LYD,
      /// <summary>
      /// Moroccan dirham
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MAD"), Description("Moroccan dirham")]
      MAD,
      /// <summary>
      /// Moldovan leu
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MDL"), Description("Moldovan leu")]
      MDL,
      /// <summary>
      /// Malagasy ariary
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MGA"), Description("Malagasy ariary")]
      MGA,
      /// <summary>
      /// Macedonian denar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MKD"), Description("Macedonian denar")]
      MKD,
      /// <summary>
      /// Myanmar kyat
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MMK"), Description("Myanmar kyat")]
      MMK,
      /// <summary>
      /// Mongolian tögrög
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MNT"), Description("Mongolian tögrög")]
      MNT,
      /// <summary>
      /// Macanese pataca
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MOP"), Description("Macanese pataca")]
      MOP,
      /// <summary>
      /// Mauritanian ouguiya
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MRU"), Description("Mauritanian ouguiya")]
      MRU,
      /// <summary>
      /// Mauritian rupee
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MUR"), Description("Mauritian rupee")]
      MUR,
      /// <summary>
      /// Maldivian rufiyaa
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MVR"), Description("Maldivian rufiyaa")]
      MVR,
      /// <summary>
      /// Malawian kwacha
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MWK"), Description("Malawian kwacha")]
      MWK,
      /// <summary>
      /// Mexican peso
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MXN"), Description("Mexican peso")]
      MXN,
      /// <summary>
      /// Mexican Unidad de Inversion (UDI) (funds code)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MXV"), Description("Mexican Unidad de Inversion (UDI) (funds code)")]
      MXV,
      /// <summary>
      /// Malaysian ringgit
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MYR"), Description("Malaysian ringgit")]
      MYR,
      /// <summary>
      /// Mozambican metical
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("MZN"), Description("Mozambican metical")]
      MZN,
      /// <summary>
      /// Namibian dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("NAD"), Description("Namibian dollar")]
      NAD,
      /// <summary>
      /// Nigerian naira
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("NGN"), Description("Nigerian naira")]
      NGN,
      /// <summary>
      /// Nicaraguan córdoba
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("NIO"), Description("Nicaraguan córdoba")]
      NIO,
      /// <summary>
      /// Norwegian krone
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("NOK"), Description("Norwegian krone")]
      NOK,
      /// <summary>
      /// Nepalese rupee
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("NPR"), Description("Nepalese rupee")]
      NPR,
      /// <summary>
      /// New Zealand dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("NZD"), Description("New Zealand dollar")]
      NZD,
      /// <summary>
      /// Omani rial
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("OMR"), Description("Omani rial")]
      OMR,
      /// <summary>
      /// Panamanian balboa
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("PAB"), Description("Panamanian balboa")]
      PAB,
      /// <summary>
      /// Peruvian Sol
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("PEN"), Description("Peruvian Sol")]
      PEN,
      /// <summary>
      /// Papua New Guinean kina
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("PGK"), Description("Papua New Guinean kina")]
      PGK,
      /// <summary>
      /// Philippine piso[13]
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("PHP"), Description("Philippine piso[13]")]
      PHP,
      /// <summary>
      /// Pakistani rupee
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("PKR"), Description("Pakistani rupee")]
      PKR,
      /// <summary>
      /// Polish złoty
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("PLN"), Description("Polish złoty")]
      PLN,
      /// <summary>
      /// Paraguayan guaraní
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("PYG"), Description("Paraguayan guaraní")]
      PYG,
      /// <summary>
      /// Qatari riyal
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("QAR"), Description("Qatari riyal")]
      QAR,
      /// <summary>
      /// Romanian leu
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("RON"), Description("Romanian leu")]
      RON,
      /// <summary>
      /// Serbian dinar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("RSD"), Description("Serbian dinar")]
      RSD,
      /// <summary>
      /// Russian ruble
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("RUB"), Description("Russian ruble")]
      RUB,
      /// <summary>
      /// Rwandan franc
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("RWF"), Description("Rwandan franc")]
      RWF,
      /// <summary>
      /// Saudi riyal
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SAR"), Description("Saudi riyal")]
      SAR,
      /// <summary>
      /// Solomon Islands dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SBD"), Description("Solomon Islands dollar")]
      SBD,
      /// <summary>
      /// Seychelles rupee
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SCR"), Description("Seychelles rupee")]
      SCR,
      /// <summary>
      /// Sudanese pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SDG"), Description("Sudanese pound")]
      SDG,
      /// <summary>
      /// Swedish krona/kronor
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SEK"), Description("Swedish krona/kronor")]
      SEK,
      /// <summary>
      /// Singapore dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SGD"), Description("Singapore dollar")]
      SGD,
      /// <summary>
      /// Saint Helena pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SHP"), Description("Saint Helena pound")]
      SHP,
      /// <summary>
      /// Sierra Leonean leone
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SLL"), Description("Sierra Leonean leone")]
      SLL,
      /// <summary>
      /// Somali shilling
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SOS"), Description("Somali shilling")]
      SOS,
      /// <summary>
      /// Surinamese dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SRD"), Description("Surinamese dollar")]
      SRD,
      /// <summary>
      /// South Sudanese pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SSP"), Description("South Sudanese pound")]
      SSP,
      /// <summary>
      /// São Tomé and Príncipe dobra
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("STN"), Description("São Tomé and Príncipe dobra")]
      STN,
      /// <summary>
      /// Salvadoran colón
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SVC"), Description("Salvadoran colón")]
      SVC,
      /// <summary>
      /// Syrian pound
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SYP"), Description("Syrian pound")]
      SYP,
      /// <summary>
      /// Swazi lilangeni
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("SZL"), Description("Swazi lilangeni")]
      SZL,
      /// <summary>
      /// Thai baht
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("THB"), Description("Thai baht")]
      THB,
      /// <summary>
      /// Tajikistani somoni
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("TJS"), Description("Tajikistani somoni")]
      TJS,
      /// <summary>
      /// Turkmenistan manat
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("TMT"), Description("Turkmenistan manat")]
      TMT,
      /// <summary>
      /// Tunisian dinar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("TND"), Description("Tunisian dinar")]
      TND,
      /// <summary>
      /// Tongan paʻanga
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("TOP"), Description("Tongan paʻanga")]
      TOP,
      /// <summary>
      /// Turkish lira
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("TRY"), Description("Turkish lira")]
      TRY,
      /// <summary>
      /// Trinidad and Tobago dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("TTD"), Description("Trinidad and Tobago dollar")]
      TTD,
      /// <summary>
      /// Tuvalu Dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("TVD"), Description("Tuvalu Dollar")]
      TVD,
      /// <summary>
      /// New Taiwan dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("TWD"), Description("New Taiwan dollar")]
      TWD,
      /// <summary>
      /// Tanzanian shilling
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("TZS"), Description("Tanzanian shilling")]
      TZS,
      /// <summary>
      /// Ukrainian hryvnia
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("UAH"), Description("Ukrainian hryvnia")]
      UAH,
      /// <summary>
      /// Ugandan shilling
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("UGX"), Description("Ugandan shilling")]
      UGX,
      /// <summary>
      /// United States dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("USD"), Description("United States dollar")]
      USD,
      /// <summary>
      /// United States dollar (next day) (funds code)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("USN"), Description("United States dollar (next day) (funds code)")]
      USN,
      /// <summary>
      /// Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("UYI"), Description("Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)")]
      UYI,
      /// <summary>
      /// Uruguayan peso
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("UYU"), Description("Uruguayan peso")]
      UYU,
      /// <summary>
      /// Uzbekistan som
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("UZS"), Description("Uzbekistan som")]
      UZS,
      /// <summary>
      /// Venezuelan bolívar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("VEF"), Description("Venezuelan bolívar")]
      VEF,
      /// <summary>
      /// Vietnamese đồng
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("VND"), Description("Vietnamese đồng")]
      VND,
      /// <summary>
      /// Vanuatu vatu
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("VUV"), Description("Vanuatu vatu")]
      VUV,
      /// <summary>
      /// Samoan tala
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("WST"), Description("Samoan tala")]
      WST,
      /// <summary>
      /// CFA franc BEAC
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XAF"), Description("CFA franc BEAC")]
      XAF,
      /// <summary>
      /// Silver (one troy ounce)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XAG"), Description("Silver (one troy ounce)")]
      XAG,
      /// <summary>
      /// Gold (one troy ounce)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XAU"), Description("Gold (one troy ounce)")]
      XAU,
      /// <summary>
      /// European Composite Unit (EURCO) (bond market unit)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XBA"), Description("European Composite Unit (EURCO) (bond market unit)")]
      XBA,
      /// <summary>
      /// European Monetary Unit (E.M.U.-6) (bond market unit)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XBB"), Description("European Monetary Unit (E.M.U.-6) (bond market unit)")]
      XBB,
      /// <summary>
      /// European Unit of Account 9 (E.U.A.-9) (bond market unit)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XBC"), Description("European Unit of Account 9 (E.U.A.-9) (bond market unit)")]
      XBC,
      /// <summary>
      /// European Unit of Account 17 (E.U.A.-17) (bond market unit)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XBD"), Description("European Unit of Account 17 (E.U.A.-17) (bond market unit)")]
      XBD,
      /// <summary>
      /// East Caribbean dollar
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XCD"), Description("East Caribbean dollar")]
      XCD,
      /// <summary>
      /// Special drawing rights
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XDR"), Description("Special drawing rights")]
      XDR,
      /// <summary>
      /// CFA franc BCEAO
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XOF"), Description("CFA franc BCEAO")]
      XOF,
      /// <summary>
      /// Palladium (one troy ounce)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XPD"), Description("Palladium (one troy ounce)")]
      XPD,
      /// <summary>
      /// CFP franc (franc Pacifique)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XPF"), Description("CFP franc (franc Pacifique)")]
      XPF,
      /// <summary>
      /// Platinum (one troy ounce)
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XPT"), Description("Platinum (one troy ounce)")]
      XPT,
      /// <summary>
      /// SUCRE
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XSU"), Description("SUCRE")]
      XSU,
      /// <summary>
      /// Code reserved for testing purposes
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XTS"), Description("Code reserved for testing purposes")]
      XTS,
      /// <summary>
      /// ADB Unit of Account
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XUA"), Description("ADB Unit of Account")]
      XUA,
      /// <summary>
      /// No currency
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("XXX"), Description("No currency")]
      XXX,
      /// <summary>
      /// Yemeni rial
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("YER"), Description("Yemeni rial")]
      YER,
      /// <summary>
      /// South African rand
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("ZAR"), Description("South African rand")]
      ZAR,
      /// <summary>
      /// Zambian kwacha
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("ZMW"), Description("Zambian kwacha")]
      ZMW,
      /// <summary>
      /// Zimbabwean dollar A/10
      /// (system: urn:iso:std:iso:4217)
      /// </summary>
      [EnumLiteral("ZWL"), Description("Zimbabwean dollar A/10")]
      ZWL,
    }

    /// <summary>
    /// Numerical value (with implicit precision)
    /// </summary>
    [FhirElement("value", InSummary=true, Order=30)]
    [DataMember]
    public Hl7.Fhir.Model.FhirDecimal ValueElement
    {
      get { return _ValueElement; }
      set { _ValueElement = value; OnPropertyChanged("ValueElement"); }
    }

    private Hl7.Fhir.Model.FhirDecimal _ValueElement;

    /// <summary>
    /// Numerical value (with implicit precision)
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    [IgnoreDataMember]
    public decimal? Value
    {
      get { return ValueElement != null ? ValueElement.Value : null; }
      set
      {
        if (value == null)
          ValueElement = null;
        else
          ValueElement = new Hl7.Fhir.Model.FhirDecimal(value);
        OnPropertyChanged("Value");
      }
    }

    /// <summary>
    /// ISO 4217 Currency Code
    /// </summary>
    [FhirElement("currency", InSummary=true, Order=40)]
    [DeclaredType(Type = typeof(Code))]
    [Binding("CurrencyCode")]
    [DataMember]
    public Code<Hl7.Fhir.Model.Money.Currencies> CurrencyElement
    {
      get { return _CurrencyElement; }
      set { _CurrencyElement = value; OnPropertyChanged("CurrencyElement"); }
    }

    private Code<Hl7.Fhir.Model.Money.Currencies> _CurrencyElement;

    /// <summary>
    /// ISO 4217 Currency Code
    /// </summary>
    /// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>
    [IgnoreDataMember]
    public Hl7.Fhir.Model.Money.Currencies? Currency
    {
      get { return CurrencyElement != null ? CurrencyElement.Value : null; }
      set
      {
        if (value == null)
          CurrencyElement = null;
        else
          CurrencyElement = new Code<Hl7.Fhir.Model.Money.Currencies>(value);
        OnPropertyChanged("Currency");
      }
    }

    public override IDeepCopyable CopyTo(IDeepCopyable other)
    {
      var dest = other as Money;

      if (dest == null)
      {
        throw new ArgumentException("Can only copy to an object of the same type", "other");
      }

      base.CopyTo(dest);
      if(ValueElement != null) dest.ValueElement = (Hl7.Fhir.Model.FhirDecimal)ValueElement.DeepCopy();
      if(CurrencyElement != null) dest.CurrencyElement = (Code<Hl7.Fhir.Model.Money.Currencies>)CurrencyElement.DeepCopy();
      return dest;
    }

    public override IDeepCopyable DeepCopy()
    {
      return CopyTo(new Money());
    }

    ///<inheritdoc />
    public override bool Matches(IDeepComparable other)
    {
      var otherT = other as Money;
      if(otherT == null) return false;

      if(!base.Matches(otherT)) return false;
      if( !DeepComparable.Matches(ValueElement, otherT.ValueElement)) return false;
      if( !DeepComparable.Matches(CurrencyElement, otherT.CurrencyElement)) return false;

      return true;
    }

    public override bool IsExactly(IDeepComparable other)
    {
      var otherT = other as Money;
      if(otherT == null) return false;

      if(!base.IsExactly(otherT)) return false;
      if( !DeepComparable.IsExactly(ValueElement, otherT.ValueElement)) return false;
      if( !DeepComparable.IsExactly(CurrencyElement, otherT.CurrencyElement)) return false;

      return true;
    }

    [IgnoreDataMember]
    public override IEnumerable<Base> Children
    {
      get
      {
        foreach (var item in base.Children) yield return item;
        if (ValueElement != null) yield return ValueElement;
        if (CurrencyElement != null) yield return CurrencyElement;
      }
    }

    [IgnoreDataMember]
    public override IEnumerable<ElementValue> NamedChildren
    {
      get
      {
        foreach (var item in base.NamedChildren) yield return item;
        if (ValueElement != null) yield return new ElementValue("value", ValueElement);
        if (CurrencyElement != null) yield return new ElementValue("currency", CurrencyElement);
      }
    }

    protected override bool TryGetValue(string key, out object value)
    {
      switch (key)
      {
        case "value":
          value = ValueElement;
          return ValueElement is not null;
        case "currency":
          value = CurrencyElement;
          return CurrencyElement is not null;
        default:
          return base.TryGetValue(key, out value);
      }

    }

    protected override Base SetValue(string key, object value)
    {
      switch (key)
      {
        case "value":
          ValueElement = (Hl7.Fhir.Model.FhirDecimal)value;
          return this;
        case "currency":
          CurrencyElement = (Code<Hl7.Fhir.Model.Money.Currencies>)value;
          return this;
        default:
          return base.SetValue(key, value);
      }

    }

    protected override IEnumerable<KeyValuePair<string, object>> GetElementPairs()
    {
      foreach (var kvp in base.GetElementPairs()) yield return kvp;
      if (ValueElement is not null) yield return new KeyValuePair<string,object>("value",ValueElement);
      if (CurrencyElement is not null) yield return new KeyValuePair<string,object>("currency",CurrencyElement);
    }

  }

}

// end of file
